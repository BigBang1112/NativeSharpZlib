name: Build zlib package

on:
  workflow_call:
    inputs:
      zlib_version:
        type: string
        required: true
      runs-on:
        type: string
        required: true
      upload_package:
        type: boolean

permissions:
  contents: read

jobs:
  build-zlib:
    name: Build zlib ${{ inputs.zlib_version }}
    uses: ./.github/workflows/build-zlib-ng.yml
    with:
      zlib_version: ${{ inputs.zlib_version }}

  build-and-test:
    needs: build-zlib

    name: Build package + test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ${{ fromJson(inputs.runs-on) }}
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Download zlib build
      uses: actions/download-artifact@v4
      with:
        path: runtimes
        merge-multiple: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          9.0.x
          8.0.x
          6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release --no-restore -p:ContinuousIntegrationBuild=true -p:ZlibVersion=${{ inputs.zlib_version }}

    - name: Setup tests (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        for version in 9.0 8.0 6.0 462; do
          cp -r runtimes/linux-x64/native/* "NativeSharpZlib.Tests/bin/Release/net${version}"
        done
    
    - name: Setup tests (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $versions = @('9.0', '8.0', '6.0', '462')
        foreach ($version in $versions) {
          Copy-Item -Path 'runtimes/win-x64/native/*' -Destination "NativeSharpZlib.Tests/bin/Release/net$version" -Recurse
        }

    - name: Test
      run: |
        dotnet test -c Release --no-build --verbosity normal --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage
    
    - name: Code Coverage Report
      if: matrix.os == 'ubuntu-latest'
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: text
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '10 30'

    - name: Upload package
      if: ${{ inputs.upload_package }}
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: NativeSharpZlib/bin/Release/*.*nupkg
